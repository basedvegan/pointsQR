{"ast":null,"code":"import _defineProperty from \"/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/src/pages/Books/Books.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nvar Books =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Books, _Component);\n\n  function Books() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Books);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Books)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      studentname: \"\",\n      points: \"\",\n      qrcode: \"\"\n    };\n\n    _this.deleteBook = function (id) {\n      API.deleteBook(id).then(function (res) {\n        return _this.loadBooks();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      var QRCode = require('qrcode');\n\n      var canvas = document.getElementById('canvas');\n      QRCode.toCanvas(canvas, _this.state.studentname, function (error) {\n        if (error) console.error(error);\n        console.log('success!');\n      }); //var QRCode = require('qrcode')\n      //QRCode.toDataURL(this.state.studentname, function (err, qrcode) {\n      //console.log(qrcode)\n      //})\n\n      if (_this.state.studentname && _this.state.points) {\n        API.saveBook({\n          studentname: _this.state.studentname,\n          points: _this.state.points,\n          qrcode: _this.state.qrcode\n        }).then(function (res) {\n          return _this.loadBooks();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Books, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load all books and save them to this.state.books\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.getBooks().then(function (res) {\n        return _this2.setState({\n          books: res.data,\n          studentname: \"\",\n          points: \"\",\n          qrcode: \"\"\n        });\n      });\n    } // Loads all books  and sets them to this.state.books\n    // loadBooks = () => {\n    //   API.getBooks()\n    //     .then(res =>\n    //       this.setState({ books: res.data, title: \"\", author: \"\", qrcode: \"\" })\n    //     )\n    //     .catch(err => console.log(err));\n    // };\n    // Deletes a book from the database with a given id, then reloads books from the db\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Add Students to Class\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.studentname,\n        onChange: this.handleInputChange,\n        name: \"studentname\",\n        placeholder: \"Student Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.points,\n        onChange: this.handleInputChange,\n        name: \"points\",\n        placeholder: \"Points\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"canvas\", {\n        id: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"script\", {\n        src: \"bundle.js\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.points && this.state.studentname),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Students in My Class\")), this.state.books.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.books.map(function (book) {\n        return React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, book.studentname, \" : \", book.points, \" points : \", book.qrcode)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this3.deleteBook(book._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Books;\n}(Component);\n\nexport default Books;","map":{"version":3,"sources":["/Users/amandaalburez/Desktop/studentPoints2ndCommit/client/src/pages/Books/Books.js"],"names":["React","Component","Jumbotron","DeleteBtn","API","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Books","state","books","studentname","points","qrcode","deleteBook","id","then","res","loadBooks","catch","err","console","log","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","QRCode","require","canvas","document","getElementById","toCanvas","error","saveBook","getBooks","data","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\n\nclass Books extends Component {\n  // Setting our component's initial state\n  state = {\n    books: [],\n    studentname: \"\",\n    points: \"\",\n    qrcode: \"\"\n  };\n\n  // When the component mounts, load all books and save them to this.state.books\n  componentDidMount() {\n    API.getBooks().then(res => this.setState({ books: res.data, studentname: \"\", points: \"\", qrcode: \"\" }));\n  }\n\n  // Loads all books  and sets them to this.state.books\n  // loadBooks = () => {\n  //   API.getBooks()\n  //     .then(res =>\n  //       this.setState({ books: res.data, title: \"\", author: \"\", qrcode: \"\" })\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  deleteBook = id => {\n    API.deleteBook(id)\n      .then(res => this.loadBooks())\n      .catch(err => console.log(err));\n  };\n\n  // Handles updating component state when the user types into the input field\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  handleFormSubmit = event => {\n    event.preventDefault();\n\n\n    var QRCode = require('qrcode')\nvar canvas = document.getElementById('canvas')\n\nQRCode.toCanvas(canvas, this.state.studentname, function (error) {\n  if (error) console.error(error)\n  console.log('success!');\n})\n\n    //var QRCode = require('qrcode')\n\n    //QRCode.toDataURL(this.state.studentname, function (err, qrcode) {\n      //console.log(qrcode)\n    //})\n\n    if (this.state.studentname && this.state.points) {\n      API.saveBook({\n        studentname: this.state.studentname,\n       points: this.state.points,\n        qrcode: this.state.qrcode\n      })\n        .then(res => this.loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Add Students to Class</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.studentname}\n                onChange={this.handleInputChange}\n                name=\"studentname\"\n                placeholder=\"Student Name\"\n              />\n              <Input\n                value={this.state.points}\n                onChange={this.handleInputChange}\n                name=\"points\"\n                placeholder=\"Points\"\n              />\n    <canvas id=\"canvas\"></canvas>\n    <script src=\"bundle.js\"></script>\n              <FormBtn\n                disabled={!(this.state.points && this.state.studentname)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Students in My Class</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <List>\n                {this.state.books.map(book => {\n                  return (\n                    <ListItem key={book._id}>\n                      <a href={\"/books/\" + book._id}>\n                        <strong>\n                          {book.studentname} : {book.points} points : {book.qrcode}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}